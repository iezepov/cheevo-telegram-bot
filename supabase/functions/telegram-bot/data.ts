import { BotActionType, BotData } from "./types.ts";

export const OnboardingData: BotData = {
  states: {
    "start": {
      replies: [
        {
          text: { en: "What's next?", ru: "–ß—Ç–æ –¥–∞–ª—å—à–µ?" },
          nextState: "onboarding-level",
          botActions: [
            {
              type: BotActionType.SendMessage,
              text: {
                en: "I am so happy you are here!",
                ru: "–Ø —Ç–∞–∫ —Ä–∞–¥, —á—Ç–æ —Ç—ã —Å–æ –º–Ω–æ–π!",
              },
            },
            {
              type: BotActionType.SendMessage,
              text: {
                en: "I want to be your English buddy",
                ru: "–ë—É–¥–µ–º –≤–º–µ—Å—Ç–µ –æ—Ç—Ç–∞—á–∏–≤–∞—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ!",
              },
            },
            {
              type: BotActionType.SendMessage,
              text: { en: "Can I ask you a question?", ru: "–í–æ–ø—Ä–æ—Å–∏–∫ –µ—Å—Ç—å." },
            },
            {
              type: BotActionType.SendMessage,
              text: {
                en: "What do you think your current level of English is?",
                ru: "–¢—ã –∫–∞–∫ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å?",
              },
            },
          ],
        },
      ],
    },
    "onboarding-level": {
      replies: [
        {
          text: { en: "I'm a beginner!", ru: "–Ø –Ω–æ–≤–∏—á–æ–∫!" },
          nextState: "onboarding-done",
          botActions: [
            {
              type: BotActionType.SendMessage,
              text: {
                en: "Thank you for sharing!",
                ru: "–ü–æ–Ω—è–ª! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è.",
              },
            },
          ],
        },
        {
          text: {
            en: "I understand a lot but speaking is haaaard!",
            ru: "–Ø –ø–æ–Ω–∏–º–∞—é –≤—Å–µ, –∞ —Å–∫–∞–∑–∞—Ç—å –Ω–µ –º–æ–≥—É üê∂",
          },
          nextState: "onboarding-done",
          botActions: [
            {
              type: BotActionType.SendMessage,
              text: {
                en: "Thank you for sharing!",
                ru: "–ü–æ–Ω—è–ª! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è.",
              },
            },
          ],
        },
        {
          text: {
            en: "I'm pretty good at English but I want to be flawless üíé",
            ru: "–Ø –æ–æ–æ—á–µ–Ω—å —Ö–æ—Ä–æ—à, —á—Ç–æ —Ö–æ—á—É —á—Ç–æ–±—ã –≤–æ–æ–±—â–µ –∏–¥–µ–∞–ª—å–Ω–æ üíé",
          },
          nextState: "onboarding-done",
          botActions: [
            {
              type: BotActionType.SendMessage,
              text: {
                en: "Thank you for sharing!",
                ru: "–ü–æ–Ω—è–ª! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è.",
              },
            },
          ],
        },
      ],
    },
    "onboarding-done": {
      replies: [
        {
          text: {
            en: "I think I'm stuck in a loop. Is it so?",
            ru: "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è —è –≤ —Ü–∏–∫–ª–µ. –≠—Ç–æ —Ç–∞–∫?",
          },
          nextState: "onboarding-done",
          botActions: [
            {
              type: BotActionType.SendMessage,
              text: {
                en: "What do you think? (Try sending a voice message)",
                ru:
                  "–ê —Ç—ã –∫–∞–∫ –¥—É–º–∞–µ—à—å? (–ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)",
              },
            },
          ],
        },
      ],
    },
  },
};
